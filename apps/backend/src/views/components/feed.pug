style.
  .items {
    --items-cols-xs: 1;
    --items-cols-sm: 2;
    --items-cols-md: 3;
    --items-cols-lg: 4;
    --items-cols-xl: 5;
    --items-cols: var(--items-cols-xs);
    --items-grid-gap: 1rem;
    --item-background: #ecf0f3;
    --item-image-background: #111;
    --item-box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.1);
    --item-title-color: #000;
    --item-description-color: #000;
    --item-name-color: #000;
    --item-url-host-color: #333;
    --item-url-path-color: #999;
    --item-image-ratio: 56.25%;
    --item-image-fit: cover;
    --item-padding: 1rem;
  }

  .dark .items {
    --item-background: #222;
    --item-title-color: #fff;
    --item-description-color: #ecf0f3;
    --item-name-color: #ecf0f3;
    --item-url-host-color: #fff;
  }

  .items {
    display: grid;
    grid-auto-flow: row;
    grid-gap: var(--items-grid-gap);
    justify-content: center;
    grid-template-columns: repeat(var(--items-cols), 1fr);
  }

  @media screen and (min-width: 600px){
    .items {
      --items-cols: var(--items-cols-sm);
    }
  }

  @media screen and (min-width: 960px){
    .items {
      --items-cols: var(--items-cols-md);
    }
  }

  @media screen and (min-width: 1200px) {
    .items {
      --items-cols: var(--items-cols-lg);
    }
  }

  @media screen and (min-width: 1920px){
    .items {
      --items-cols: var(--items-cols-xl);
    }
  }

  .items .item {
    transition: all 0.3s;
    background: var(--item-background);
    box-shadow: var(--item-box-shadow);
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  .item .item-link {
    color: inherit;
    text-decoration: none;
    flex: 1;
    display: block;
  }

  .item .item-image {
    position: relative;
    padding-top: var(--item-image-ratio);
  }

  .item .item-image img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    display: block;
    object-fit: var(--item-image-fit);
    background: var(--item-image-background);
  }

  .item .item-body, .item .item-footer {
    padding: var(--item-padding);
  }

  .item-body .item-title {
    color: var(--item-title-color);
    margin: 0 0 0.5rem 0;
  }

  .item-body .item-description {
    color: var(--item-description-color);
    margin: 0;
  }

  .item-meta {
    font-size: 0.75rem;
    line-height: 0.75rem;
  }

  .item-meta > *:not(:last-child)::after {
    content:"\26ac";
    margin: 0 0.25rem;
    color: #999;
  }

  .item-meta .item-name {
    color: var(--item-name-color);
    margin: 0;
  }

  .item-icon img {
    margin-right: 0.5rem;
    height: 16px;
    width: auto;
  }

  .item-meta .item-url {
    font-family: monospace;
  }

  .item-meta .item-url .item-host {
    color: var(--item-url-host-color);
  }

  .item-meta .item-url .item-path {
    color: var(--item-url-path-color);
  }

  .item-meta .item-secure svg {
    color: #10c15c;
    fill: currentColor;
  }

  .item-tags {
    margin-bottom: 0.5rem;
  }

mixin feed(items)
  .container
    .items
      each item in items
        +feed-item(item)

mixin feed-item(item)
  .item
    a.item-link(href=item.url.full target="_blank")
      .item-image
        img(src=item.meta.image)
      .item-body
        
        h3.item-title
          if item.meta.icon
            span.item-icon
              img(src=item.meta.icon)
          span=item.meta.title
        p.item-description=item.meta.description
    .item-footer
      .item-tags
        +tags(item.meta.tags)
      .item-meta

          if item.url.protocol === 'https:'
            span.item-secure
              i(data-eva="lock" data-eva-height="14" data-eva-width="14")

          if item.meta.name
            span.item-name=item.meta.name

          span.item-url
            span.item-host=item.url.host
            if item.url.path && item.url.path !== '/'
              span.item-path=item.url.path
